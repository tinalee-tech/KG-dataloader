# gene_transcript_go data format
# all contents after '#' are comments and will not be loaded
# all '{}'s are regular expressions, but the data type has to be defined in a block

>format_type
# indicate whether data file is in tabular format or matrix format
# 0: tabular, 1: matrix
0

>file_name # If it is not a regular expression, this part is not important and you can provide anything
None

>headers # number of header lines
1 # can only have 1 line

>delimiter # type of delimiter for the data file
\t

>graph_pattern # all nodes and edges and their labels
node:A{
    label = gene
}
node:B{
    label = transcript
}
edge:C{
    label = transcribe_into,  # label don't contain spaces (neo4j format restriction)
    from = A,
    to = B
}

>line_format
# column_name column_information (the order must be right! And all columns have to be present!)
# if that column is not important, just put a "None" (actually anything without a '{}' would work)
Gene_stable_ID {A.id}
Gene_stable_ID_version {A.id}.{A.id_version}
Transcript_stable_ID {B.id}
Transcript_stable_ID_version {B.id}.{B.id_version}
Gene_description {A.description}
Chromosome_scaffold_name {A.chr} {B.chr} # second label's attribute has to be of the same regex format as that of the first one
Gene_start_(bp)	{A.start_loc}
Gene_end_(bp) {A.end_loc}
Strand {A.strand}
Transcript_start_(bp) {B.start_loc}
Transcript_end_(bp) {B.end_loc}
Transcription_start_site_(TSS) {B.tss}
Transcript_length {B.trans_length}
GENCODE_basic_annotation {A.gencode_annotation}
Gene_name {A.name}
Transcript_name	{B.name}
Gene_%_GC_content {A.GC_content_percentage}
Gene_type {A.type}
Transcript_type {B.type}

>global_variables
# variables that apply to all nodes/edges
# If there's none to be added, put a None (or any single string)
None

>node_attributes
# record the attributes and their data types that will be in the graph
A.id (str)
A.id_version (str)
A.description (str)
A.chr (str)
A.start_loc (int)
A.end_loc (int)
A.strand (int)
A.gencode_annotation (str)
A.name (str)
A.GC_content_percentage (float)
A.type (str)
B.id (str)
B.id_version (str)
B.chr (str)
B.start_loc (int)
B.end_loc (int)
B.tss (int)
B.trans_length (int)
B.name (str)
B.type (str)

>node_primary_keys
# specify the attributes to be matched (primary keys) for a node when merging into neo4j database (edges don't have primary keys)
# on match renew other attributes
# otherwise create new node
A.id (str)
B.id (str)

>chr_chain
# specify which label is to be connected to what chr_chain node
# In the same line,
# first string is taken as the attribute for chr number, second string is taken as for the location,
# thrid string is taken as for the resolution. (has to give three strings per line)
# If there's no chr_chain to be added, fill this field with a None (or any single string)
A.chr A.start_loc 50000
B.chr B.start_loc 50000
